<project xmlns:if="ant:if" xmlns:unless="ant:unless" name="jpa-entity-generator" basedir=".">

  <taskdef resource="net/sf/antcontrib/antlib.xml" />

  <condition property="os" value="win" else="mac">
    <os family="windows" />
  </condition>

  <condition property="mvn.cmd" value="${basedir}\mvnw.cmd" else="${basedir}\mvnw">
    <os family="windows" />
  </condition>

  <property name="jeg-config" location="jpa-entity-generator-core/target/classes/jeg-config.yml" />

  <target name="test">
    <condition property="analyze.profile" value="-P analyze" else="">
      <equals arg1="${analyze}" arg2="true" />
    </condition>

    <exec executable="${mvn.cmd}" failonerror="true">
      <arg line="clean install -D maven.test.skip=true" />
    </exec>

    <antcall target="exec-jar" />
    <antcall target="exec-maven-plugin" />

    <exec executable="${mvn.cmd}" failonerror="true">
      <arg line="verify ${analyze.profile}" />
    </exec>

    <if>
      <equals arg1="${analyze}" arg2="true" />
      <then>
        <exec executable="${mvn.cmd}" failonerror="true">
          <arg line="sonar:sonar --fail-at-end" />
        </exec>
      </then>
    </if>
  </target>

  <target name="deploy" depends="test">
    <condition property="maven-central" value=",maven-central" else="">
      <not>
        <matches pattern="-SNAPSHOT$" string="${project.version}" />
      </not>
    </condition>

    <exec executable="${mvn.cmd}" failonerror="true">
      <arg line="clean deploy -P !local-dev,release${maven-central}" />
    </exec>
  </target>


  <target name="exec-jar">
    <property name="lib" value="target/lib" />

    <exec executable="${mvn.cmd}" failonerror="true">
      <arg line="-N dependency:copy " />
      <arg line="-D artifact=${db.jdbc.groupId}:${db.jdbc.artifactId}:${db.jdbc.version} " />
      <arg line="-D outputDirectory=${lib} " />
    </exec>

    <copy todir="${lib}"
      file="jpa-entity-generator-core/target/jpa-entity-generator-core-${project.version}-all-deps.jar" />

    <exec executable="${mvn.cmd}" failonerror="true">
      <arg line="-f jpa-entity-generator-core process-resources " />
    </exec>

    <java classname="${core.mainClass}" classpath="${lib}/*" fork="true" failonerror="true">
      <arg value="-c=${jeg-config}" />
    </java>
  </target>


  <target name="exec-maven-plugin">
    <exec executable="${mvn.cmd}" failonerror="true">
      <arg line="-f jpa-entity-generator-core process-resources " />
      <arg
        line="-Djeg.outputDir=jpa-entity-generator-maven-plugin/target/generated-test-resources/jeg" />
    </exec>

    <exec executable="${mvn.cmd}" failonerror="true">
      <arg line="-f jpa-entity-generator-maven-plugin resources:testResources" />
    </exec>

    <exec executable="${mvn.cmd}" failonerror="true">
      <arg line="-f jpa-entity-generator-maven-plugin/target/test-classes" />
      <arg
        line="jpa-entity-generator:reverse -D configFilePath=${jeg-config}" />
    </exec>
  </target>


  <target name="gen-docs">
    <delete dir="docs" />
    <mkdir dir="docs/schemaspy" />

    <parallel>
      <exec executable="${mvn.cmd}" failonerror="true">
        <arg line="-N -f jpa-entity-generator-docs" />
      </exec>

      <exec executable="docker" failonerror="true" dir="jpa-entity-generator-db">
        <arg line="compose run --rm schemaspy" />
      </exec>
    </parallel>

    <antcall target="trans-docs" />
  </target>


  <target name="trans-docs">
    <exec executable="${mvn.cmd}" failonerror="true">
      <arg
        line="-N batch-translator:translate
        -Dbt.source=jpa-entity-generator-docs/src/docs/markdown/README_ja.md
        -Dbt.target=README.md
        -Dbt.mode=ja2en
        -Dbt.engine=minhon" />
    </exec>

    <exec executable="${mvn.cmd}" failonerror="true">
      <arg
        line="-N batch-translator:translate
        -Dbt.source=docs/ja/
        -Dbt.target=docs/en/
        -Dbt.filePattern=*.html
        -Dbt.mode=ja2en
        -Dbt.engine=aws" />
    </exec>
  </target>


  <target name="set-version">
    <property name="version" value="" />
    <fail
      if:blank="${version}"
      message="Please specify version in the system properties. (e.g. mvnw -Dant.target=set-version -Dversion=1.x.x"
    />

    <exec executable="${mvn.cmd}" dir="${basedir}">
      <arg line="versions:set -DnewVersion=${version} -DgenerateBackupPoms=false" />
    </exec>

    <if>
      <not>
        <matches string="${version}" pattern="^.*-SNAPSHOT$" />
      </not>
      <then>
        <replaceregexp flags="g">
          <regexp
            pattern="((?&lt;=jpa-entity-generator-core.*)|(?&lt;=version&gt;.*))(\d+[\.\d]+\d+)" />
          <substitution expression="${version}" />
          <fileset dir="${basedir}">
            <include name="README.md" />
            <include name="**/README_ja.md" />
          </fileset>
        </replaceregexp>
      </then>
    </if>
  </target>

</project>